"""Added Unidentified Item Table

Revision ID: 0f3f15f56b7d
Revises: fa3b02812f53
Create Date: 2025-03-04 00:21:22.039605

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "0f3f15f56b7d"
down_revision: Union[str, None] = "fa3b02812f53"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "unidentified_item",
        sa.Column("name", sa.Text(), nullable=False),
        sa.Column("itemBaseTypeId", sa.SmallInteger(), nullable=False),
        sa.Column("createdHoursSinceLaunch", sa.SmallInteger(), nullable=False),
        sa.Column("league", sa.Text(), nullable=False),
        sa.Column(
            "itemId",
            sa.BigInteger(),
            sa.Identity(always=True, start=1, increment=1),
            nullable=False,
        ),
        sa.Column("currencyId", sa.Integer(), nullable=False),
        sa.Column("ilvl", sa.SmallInteger(), nullable=False),
        sa.Column("currencyAmount", sa.Float(precision=4), nullable=False),
        sa.Column("nItems", sa.SmallInteger(), nullable=False, default=1),
        sa.Column("identified", sa.Boolean(), nullable=False),
        sa.Column("rarity", sa.Text(), nullable=False),
        sa.Column("aggregated", sa.Boolean(), nullable=False, default=False),
        sa.CheckConstraint(
            "\n            identified IS NOT TRUE\n            ",
            name="identified_is_false",
        ),
        sa.ForeignKeyConstraint(
            ["currencyId"], ["currency.currencyId"], ondelete="RESTRICT"
        ),
        sa.ForeignKeyConstraint(
            ["itemBaseTypeId"],
            ["item_base_type.itemBaseTypeId"],
            onupdate="CASCADE",
            ondelete="RESTRICT",
        ),
        sa.PrimaryKeyConstraint("itemId"),
    )
    op.create_index(
        "ix_unid_item_name_itemBaseTypeId_createdHoursSinceLaunch_league",
        "unidentified_item",
        ["name", "itemBaseTypeId", "createdHoursSinceLaunch", "league"],
        unique=False,
    )
    op.create_index(
        op.f("ix_unidentified_item_currencyId"),
        "unidentified_item",
        ["currencyId"],
        unique=False,
    )
    op.drop_index("item_createdHoursSinceLaunch_idx", table_name="item")
    op.create_foreign_key(
        None,
        "item",
        "item_base_type",
        ["itemBaseTypeId"],
        ["itemBaseTypeId"],
        onupdate="CASCADE",
        ondelete="RESTRICT",
    )
    op.create_foreign_key(
        None, "item", "currency", ["currencyId"], ["currencyId"], ondelete="RESTRICT"
    )
    op.drop_index(
        "item_modifier_createdHoursSinceLaunch_idx", table_name="item_modifier"
    )
    op.create_foreign_key(
        None,
        "item_modifier",
        "modifier",
        ["modifierId"],
        ["modifierId"],
        onupdate="CASCADE",
        ondelete="CASCADE",
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, "item_modifier", type_="foreignkey")
    op.create_index(
        "item_modifier_createdHoursSinceLaunch_idx",
        "item_modifier",
        [sa.text('"createdHoursSinceLaunch" DESC')],
        unique=False,
    )
    op.drop_constraint(None, "item", type_="foreignkey")
    op.drop_constraint(None, "item", type_="foreignkey")
    op.create_index(
        "item_createdHoursSinceLaunch_idx",
        "item",
        [sa.text('"createdHoursSinceLaunch" DESC')],
        unique=False,
    )
    op.drop_index(
        op.f("ix_unidentified_item_currencyId"), table_name="unidentified_item"
    )
    op.drop_index(
        "ix_unid_item_name_itemBaseTypeId_createdHoursSinceLaunch_league",
        table_name="unidentified_item",
    )
    op.drop_table("unidentified_item")
    # ### end Alembic commands ###
