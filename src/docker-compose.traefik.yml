services:

  traefik:
      # Use the latest Traefik image
      image: traefik:v2.10
      ports:
        # Listen on port 80, default for HTTP, necessary to redirect to HTTPS
        - 80:80
        # Listen on port 443, default for HTTPS
        - 443:443
      restart: always
      networks:
        - ${TRAEFIK_PUBLIC_NETWORK?Variable not set}
      volumes:
        # Add Docker as a mounted volume, so that Traefik can read the labels of other services
        - /var/run/docker.sock:/var/run/docker.sock:ro
        # Mount the volume to store the certificates. When new container stops/starts, it will preserve and load the certificates in this folder
        - traefik-public-certificates:/certificates
      command:
        # Enable Docker in Traefik, so that it reads labels from Docker services
        - --providers.docker
        # Do not expose all Docker services, only the ones explicitly exposed
        - --providers.docker.exposedbydefault=false
        # Create an entrypoint "http" listening on port 80
        - --entrypoints.http.address=:80
        # Create an entrypoint "https" listening on port 443
        - --entrypoints.https.address=:443
        # Create the certificate resolver "le" for Let's Encrypt, uses the environmnet variable EMAIL
        - --certificatesresolvers.le.acme.email=${SMTP_USER?Variable not set}
        # Store the Let's Encrypt certificates in the mounted volume
        - --certificatesresolvers.le.acme.storage=/certificates/acme.json
        # Use the TLS Challenge for Let's Encrypt
        - --certificatesresolvers.le.acme.tlschallenge=true
        # Enable the access log, with HTTP request
        - --accesslog
        # Enable the Traefik log, for configurations and errors
        - --log
        # Enable the Dashboard and API
        - --api
      deploy:
        placement:
          constraints:
            - node.role == manager


networks:
  traefik-public:
    # Allow setting it to false for testing
    external: true

volumes:
  traefik-public-certificates:
    external: false
